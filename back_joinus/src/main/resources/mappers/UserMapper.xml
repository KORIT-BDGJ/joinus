<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.portfolio.joinus.joinus.repository.UserRepository">

	<resultMap type="com.portfolio.joinus.joinus.entity.User" id="userMap">
		<id property="userId" column="user_id" />
		<result property="email" column="email" />
		<result property="password" column="password" />
		<result property="name" column="name" />
		<result property="provider" column="provider" />
		<result property="address" column="address" />
		<result property="gender" column="gender" />
		<collection property="authorities" javaType="list" resultMap="authorityMap" />
	</resultMap>
	<resultMap type="com.portfolio.joinus.joinus.entity.Authority" id="authorityMap">
		<id property="authorityId" column="authority_id" />
		<result property="userId" column="user_id" />
		<result property="roleId" column="role_id" />
		<association property="role" resultMap="roleMap" />
	</resultMap>
	
	<resultMap type="com.portfolio.joinus.joinus.entity.Role" id="roleMap">
		<id property="roleId" column="role_id" />
		<result property="roleName" column="role_name" />
	</resultMap>

	<select id="findUserByEmail" resultMap="userMap">
		select
			ut.user_id,
			ut.name,
			ut.email,
			ut.password,
			ut.address,
			ut.gender,
			ut.provider,
			
			at.authority_id,
			at.user_id,
			at.role_id,
			
			rt.role_id,
			rt.role_name
		from
			user_tb ut
			left outer join authority_tb at on(at.user_id = ut.user_id)
			left outer join role_tb rt on(rt.role_id = at.role_id)
		where
			ut.email = #{email}
	</select>
	
	<insert id="registerUser" 
	parameterType="com.portfolio.joinus.joinus.entity.User"
	useGeneratedKeys="true"
	keyProperty="userId">
		insert into user_tb
		values (0, #{name}, #{email}, #{password}, #{address}, #{gender}, #{provider})
	</insert>
	
	<insert id="registerAuthority" parameterType="com.portfolio.joinus.joinus.entity.Authority">
		insert into authority_tb
		values (0, #{userId}, #{roleId})
	</insert>
	
	<insert id="registerPoint" 
    parameterType="com.portfolio.joinus.joinus.entity.Point"
    useGeneratedKeys="true"
    keyProperty="userId">
    insert into point_tb
    values (0, #{userId}, 0)
	</insert>
	
	<insert id="registerUserInfo" 
	    parameterType="com.portfolio.joinus.joinus.entity.UserInfo"
	    useGeneratedKeys="true"
	    keyProperty="userId">
	    insert into user_info_tb
	    values (0, #{userId}, '', #{nickName})
	</insert>
	
	<insert id="registerSportsLikes" 
	    parameterType="com.portfolio.joinus.joinus.entity.SportsLikes"
	    useGeneratedKeys="true"
	    keyProperty="userId">
	    insert into sports_likes_tb
	    values (0, #{userId}, 0)
	</insert>
	
	
	
	
	<update id="updateProvider">
		update user_tb
		set
			provider = #{provider}
		where
			user_id = #{userId}
	</update>
	
	<update id="updatePassword">
		update user_tb
		set
			password = #{password}
		where
			user_id = #{userId}
	</update>
	
	<update id="updateAddress" >
		update user_tb
		set
			address = #{address}
		where
			user_id = #{userId}
	</update>
	
	
	<select id="getOwnerPostListByUserId" parameterType="int" resultType="com.portfolio.joinus.joinus.entity.OwnerPostList">
	    SELECT
	        owner_post_list_id,
	        user_info_id,
	        post_list_id
	    FROM
	        owner_post_list_tb
	    WHERE
	        user_info_id = #{userId}
	</select>
	
</mapper>












